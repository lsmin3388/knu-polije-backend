version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kp-server
    environment:
      - SPRING_PORT=${SPRING_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - JWT_SECRET=${JWT_SECRET}
      - FLASK_HOST=${FLASK_HOST}
      - FLASK_PORT=${FLASK_PORT}
    depends_on:
      - database
      - ai_app
    expose:
      - ${SPRING_PORT}
    ports:
      - ${SPRING_PORT}:${SPRING_PORT}
    restart: always
    networks:
      - kp-network
    volumes:
      - kp-storage:/storage

  ai_app:
    build:
      context: src-detect
      dockerfile: Dockerfile
    container_name: kp-server-2
    restart: always
    expose:
      - ${FLASK_PORT}
    ports:
      - ${FLASK_PORT}:${FLASK_PORT}
    networks:
      - kp-network

  database:
    image: postgres:latest
    container_name: kp-database
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: -p ${DB_PORT}
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always
    networks:
      - kp-network
    volumes:
      - kp-database:/var/lib/postgresql/data

networks:
  kp-network:
    driver: bridge

volumes:
  kp-database:
  kp-storage:
